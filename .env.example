# API Rate Limiter Environment Configuration Examples
# Copy this to .env and customize for your environment

# ================================
# Server Configuration
# ================================
NODE_ENV=development
PORT=3000
HOST=0.0.0.0

# ================================
# Redis Configuration
# ================================
REDIS_ENABLED=true
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ================================
# Security Configuration
# ================================

# JWT Secret (REQUIRED - Generate with: npm run security:generate)
# JWT_SECRET=your-generated-secret-here

# CORS Configuration (Environment-specific)
# Multiple origins can be separated by commas
# Examples:

# Development (default if not specified)
CORS_ORIGIN=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000

# Production (REQUIRED for production)
# CORS_ORIGIN=https://api.yourdomain.com,https://dashboard.yourdomain.com

# Staging
# CORS_ORIGIN=https://staging-api.yourdomain.com,https://staging.yourdomain.com

# For testing (single origin)
# CORS_ORIGIN=http://localhost:3000

# Allow all origins (NOT RECOMMENDED for production)
# CORS_ORIGIN=*

# Demo Users (disable in production)
DEMO_USERS_ENABLED=true

# Logging Configuration
LOG_AUTH_EVENTS=true
LOG_RATE_LIMIT_VIOLATIONS=true

# ================================
# Rate Limiting Configuration
# ================================
DEFAULT_WINDOW_MS=60000
DEFAULT_MAX_REQUESTS=100
DEFAULT_ALGORITHM=sliding-window

# ================================
# Performance and Monitoring
# ================================
ENABLE_TRUST_PROXY=false
DEBUG_CORS=false

# ================================
# IP Filtering (Optional)
# ================================
# IP_WHITELIST=127.0.0.1,::1
# IP_BLACKLIST=

# ================================
# Production-specific Settings
# ================================
# In production, also consider:
# - Setting up SSL/TLS certificates
# - Configuring reverse proxy (nginx, Apache)
# - Setting up monitoring and logging
# - Configuring Redis clustering/sentinel
# - Setting up backup strategies
