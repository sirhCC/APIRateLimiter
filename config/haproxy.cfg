# =============================================================================
# HAProxy Configuration for API Rate Limiter
# 
# Features:
# - Load balancing across multiple API instances
# - Health checks and failover
# - SSL termination
# - Rate limiting at load balancer level
# - Monitoring and statistics
# =============================================================================

global
    # Process and user settings
    daemon
    user haproxy
    group haproxy
    
    # Performance settings
    maxconn 4096
    nbthread 2
    
    # Logging
    log stdout local0 info
    
    # SSL/TLS settings
    ssl-default-bind-ciphers ECDHE+aes128gcm:ECDHE+aes256gcm:ECDHE+aes128sha256:ECDHE+aes256sha384:ECDHE+chacha20poly1305:DHE+aes128gcm:DHE+aes256gcm:DHE+aes128sha256:DHE+aes256sha384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    ssl-default-server-ciphers ECDHE+aes128gcm:ECDHE+aes256gcm:ECDHE+aes128sha256:ECDHE+aes256sha384:ECDHE+chacha20poly1305:DHE+aes128gcm:DHE+aes256gcm:DHE+aes128sha256:DHE+aes256sha384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    # Operating mode
    mode http
    
    # Timeouts
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout check 5s
    
    # HTTP options
    option httplog
    option dontlognull
    option forwardfor
    option http-server-close
    
    # Health check options
    option httpchk GET /health
    http-check expect status 200
    
    # Error handling
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

# =============================================================================
# Frontend Configuration
# =============================================================================

# HTTP Frontend (redirects to HTTPS)
frontend http_frontend
    bind *:80
    
    # Security headers
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # Redirect HTTP to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

# HTTPS Frontend
frontend https_frontend
    bind *:443 ssl crt /etc/ssl/certs/api-rate-limiter.pem
    
    # Security headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    
    # Rate limiting (basic level)
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request reject if { sc_http_req_rate(0) gt 100 }
    
    # Content compression
    compression algo gzip
    compression type text/html text/plain text/css text/javascript application/javascript application/json
    
    # Default backend
    default_backend api_rate_limiter_backend

# =============================================================================
# Backend Configuration  
# =============================================================================

backend api_rate_limiter_backend
    # Load balancing algorithm
    balance roundrobin
    
    # Health check configuration
    option httpchk GET /health
    http-check expect status 200
    
    # Connection settings
    option tcp-check
    option log-health-checks
    
    # Server timeout settings
    timeout server 30s
    timeout connect 5s
    
    # Backend servers (adjust IPs/ports for your setup)
    server api1 api-rate-limiter:3000 check inter 10s rise 2 fall 3 weight 100
    server api2 api-rate-limiter:3001 check inter 10s rise 2 fall 3 weight 100
    server api3 api-rate-limiter:3002 check inter 10s rise 2 fall 3 weight 100

# =============================================================================
# Statistics and Monitoring
# =============================================================================

frontend stats
    bind *:8404
    
    # Basic authentication (change in production)
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats auth admin:password123  # Change this password!
    
    # Additional stats
    stats show-legends
    stats show-node
    stats show-desc
    
# =============================================================================
# Rate Limiting Backend (for overloaded scenarios)
# =============================================================================

backend rate_limit_exceeded
    mode http
    errorfile 503 /usr/local/etc/haproxy/errors/rate-limit.http
